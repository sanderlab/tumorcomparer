---
title: "Choosing Cell Lines for <%= tcga_title %> Research"
params: 
  tcga_abbrev: "<%= tcga_abbrev %>"
  tcga_title: "<%= tcga_title %>"
  chunk_oncoprint_name: "<%= chunk_oncoprint_name %>"
  chunk_oncoprint_caption: "<%= chunk_oncoprint_caption %>"
---

```{r include=FALSE}
knitr::opts_chunk$set(echo=FALSE, message=FALSE, warning=FALSE)
```

```{r}
library(tumorcomparer)

library(knitr)
library(kableExtra)
library(formattable)

# PARAMETERS ----
tcga_abbrev <- toupper(params$tcga_abbrev)
tcga_title <- params$tcga_title

pkg_name <- "tumorcomparer"
pkg_version <- as.character(packageVersion(pkg_name))

ccle_tcga_mapping <- read.table("ccle_tcga_mapping.txt", sep="\t", header=TRUE, stringsAsFactors=FALSE)
ccle_mapping_name <- ccle_tcga_mapping$ccle
names(ccle_mapping_name) <- ccle_tcga_mapping$tcga

n_retrieve <- 20
n_display <- 15

# DATA ----
## TumoComparer
mtc_file <- system.file('extdata/mtc_results_20200331/mtc_results_20200331_no_factors.rds', package="tumorcomparer")
mtc_dataset <- readRDS(mtc_file)

## Citation
citation_data <- read.table("results_citations_binned_20200619.txt", sep="\t", header=TRUE, stringsAsFactors=FALSE)

## cBioPortal 
cbioportal_mapping_file <- system.file(file.path("cbioportal_ccle", "ccle_cclp_cbioportal_mapping.txt"), package="tumorcomparer")
base_url_cbioportal <- 'https://www.cbioportal.org/patient?studyId=ccle_broad_2019&caseId='
cbioportal_mapping <- read.table(cbioportal_mapping_file, sep="\t", header=TRUE, stringsAsFactors=FALSE)

cbioportal_mapping$CCLE_cBioPortal_Text[!is.na(cbioportal_mapping$CCLE_cBioPortal)] <- 
  paste0(base_url_cbioportal, cbioportal_mapping$CCLE_cBioPortal[!is.na(cbioportal_mapping$CCLE_cBioPortal)])

cbioportal_mapping$CCLE_cBioPortal[!is.na(cbioportal_mapping$CCLE_cBioPortal)] <- 
  paste0('<a target="_blank" href="', base_url_cbioportal, cbioportal_mapping$CCLE_cBioPortal[!is.na(cbioportal_mapping$CCLE_cBioPortal)], '">Link</a>')

cbioportal_mapping$ccle <- sub("https://www.cbioportal.org/patient?studyId=ccle_broad_2019&caseId=", "", cbioportal_mapping$CCLE_cBioPortal_Text, fixed=TRUE)
cbioportal_mapping_sm <- cbioportal_mapping[complete.cases(cbioportal_mapping), ]

tmp <- match(citation_data$identifier, cbioportal_mapping_sm$Model_name)
tmp <- rev(tmp[!is.na(tmp)])
cbioportal_mapping_sorted_by_citations <- cbioportal_mapping_sm[tmp,]

## TumorComparer (MTC)
mtc_dataset$Cell_Line_Name <- as.character(mtc_dataset$Cell_Line_Name)
mtc_dataset$Cell_Line_Cancer_Type <- as.character(mtc_dataset$Cell_Line_Cancer_Type)

t1 <- mtc_dataset[mtc_dataset$Cell_Line_Cancer_Type == toupper(tcga_abbrev),]
t2 <- merge(t1, citation_data, by.x="Cell_Line_Name", by.y="identifier", all.x=TRUE)
mtc_dataset <- t2[order(-t2$summed_citations),]

ccl1 <- mtc_dataset$Cell_Line_Name[1]
ccl2 <- mtc_dataset$Cell_Line_Name[2]
ccl3 <- mtc_dataset$Cell_Line_Name[3]
ccl4 <- mtc_dataset$Cell_Line_Name[4]
ccl5 <- mtc_dataset$Cell_Line_Name[5]

common_lines_text <- paste0(ccl1, ", ", ccl2, ", ", ccl3, ", ", ccl4, ", and ", ccl5)

diff1 <- paste0(ccl1, " vs ", ccl2)
diff2 <- paste0(ccl1, " vs ", ccl3)
diff3 <- paste0(ccl1, " vs ", ccl4)

diff_lines_text <- paste0(diff1, "; ", diff2, "; ", diff3, "; and etc")
```

`r common_lines_text` are some of the most widely used cell lines for `r tolower(tcga_title)` research. Often researchers have questions on selecting the most appropriate cell line(s) for particular research uses. 

TumorComparer utilizes several data types (e.g., mutation, copy number, and expression) to perform a comparison of The Cancer Genome Atlas (TCGA) tumor data to experimental cell line models from the Cancer COSMIC Cell Line Project (CCLP) for several cancer types. Please refer to [Sinha et al., 2021. DOI: 10.1016/j.crmeth.2021.100039](https://www.sciencedirect.com/science/article/pii/S2667237521000849){target="_blank"} for details on the methodology. 

This is an analysis for `r tolower(tcga_title)` cell lines with differences between the `r tolower(tcga_title)` cell lines `r diff_lines_text`. 

If you use content from this page, please cite [Sinha et al., 2021. DOI: 10.1016/j.crmeth.2021.100039](https://www.sciencedirect.com/science/article/pii/S2667237521000849){target="_blank"}.

## Characteristics of <%= tcga_title %> Cell Lines

```{r}
library(magrittr)
library(ComplexHeatmap)

# SETUP ----
source("https://raw.githubusercontent.com/cannin/cbioportal_to_complexheatmap_oncoprint/master/transform_cbioportal_to_complexheatmap_oncoprint.R")

# LOAD DATA ----
## DisGenNet
disgenet_mapping <- read.table("disgenet_tcga_mapping_20220321.txt", sep="\t", header=TRUE, stringsAsFactors=FALSE)
disgenet_genes <- disgenet_mapping$geneSymbol[disgenet_mapping$tcga == toupper(tcga_abbrev)]

ccle_tcga_mapping <- read.table("ccle_tcga_mapping.txt", sep="\t", header=TRUE, stringsAsFactors=FALSE)
ccle_mapping_name <- ccle_tcga_mapping$ccle
names(ccle_mapping_name) <- ccle_tcga_mapping$tcga

oncoprint_type <- ccle_mapping_name[toupper(tcga_abbrev)]

n_retrieve <- 20
n_display <- 15

idx <- which(cbioportal_mapping_sorted_by_citations$TCGA_Type == names(oncoprint_type))
n_retrieve <- ifelse(length(idx) >= n_retrieve, n_retrieve, length(idx))
n_display <- ifelse(length(idx) >= n_display, n_display, length(idx))

t2x <- read.table("ccle_2019_onco500_PATIENT_DATA_oncoprint.tsv.gz", sep="\t", header=TRUE, stringsAsFactors=FALSE)
#selected_cell_lines_tmp <- colnames(t2x)[grepl(oncoprint_type, colnames(t2x))] %>% sort
#selected_cell_lines <- selected_cell_lines_tmp[1:n_retrieve]
selected_cell_lines <- cbioportal_mapping_sorted_by_citations$ccle[idx[1:n_retrieve]]

t2y <- colnames(t2x)[grepl(oncoprint_type, colnames(t2x))]
selected_cell_lines <- selected_cell_lines[selected_cell_lines %in% t2y]
selected_cell_lines <- selected_cell_lines[1:n_display]
selected_cell_lines <- selected_cell_lines[!is.na(selected_cell_lines)]

t2 <- t2x[-c(1:5), c("track_name", "track_type", selected_cell_lines)] # For CCLE -c(1:5)
#t2x <- t2
t2x <- t2[t2$track_name %in% disgenet_genes,]
t3x <- transform_cbioportal_to_complexheatmap_oncoprint(t2x)
m2 <- t3x$mat
col <- t3x$col 
alter_fun_list <- t3x$alter_fun_list
#m2x <- m2[rownames(m1x),]
m2x <- m2
d2 <- as.data.frame(m2x, stringsAsFactors=FALSE)

#disgenet_mapping$geneSymbol[disgenet_mapping$tcga == "BRCA"]

h2 <- oncoPrint(m2x,
                col = col,
                alter_fun = alter_fun_list, 
                alter_fun_is_vectorized = FALSE,
                #top_annotation = columnAnnotation(month = anno_text(selected_cell_lines, just = "center", location = unit(0.5, "npc"), gp = gpar(fontsize = 10), rot = 90)),
                top_annotation = columnAnnotation(month = anno_text(selected_cell_lines, gp = gpar(fontsize = 10))),
                #bottom_annotation = columnAnnotation('Drug' = drug_annot), #DRUG HERE
                right_annotation = NULL,
                #right_annotation = rowAnnotation(D1 = runif(nrow(m2))),
                #show_column_names = TRUE,
                show_row_names = TRUE,
                row_names_side = "left",
                show_pct = FALSE,
                pct_side = "right",
                #column_title = "Cell Lines",
                #heatmap_legend_param = heatmap_legend_param
)

tmp_gene_text <- rownames(m2x)[h2@row_order[1:5]]
tmp_cell_text <- colnames(m2x)[h2@column_order[1:5]]

oncoprint_gene_text <- paste0(paste(tmp_gene_text, collapse=", "), ", etc.")
oncoprint_cell_text <- paste0(paste(gsub("_.*$", "", tmp_cell_text), collapse=", "), ", etc2")
```

The figure shows the presence of alterations for genes (`r oncoprint_gene_text`) commonly associated with `r tolower(tcga_title)` in the cell lines: `r oncoprint_cell_text`. The gene list is retrieved from [DisGeNET](https://www.disgenet.org/){target="_blank"}, and the alteration information is retrieved from [cBioPortal](https://www.cbioportal.org/){target="_blank"} for the Cancer Cell Line Encyclopedia (CCLE) dataset. 

NOTE: Only a subset of `r tolower(tcga_title)` cell lines are shown to ensure a readable figure. Alterations for additional `r tolower(tcga_title)` cell lines and genes are available on [cBioPortal](https://www.cbioportal.org/){target="_blank"} using links on the table below.

```{r <%= chunk_oncoprint_name %>, fig.align='center', fig.width=6.5, fig.cap="<%= chunk_oncoprint_caption %>"}
draw(h2)
```

## Cell Line Comparison to Pan-Cancer TCGA

The TumorComparer analysis examines the most variably expressed genes, as well as alteration information for cell lines and TCGA patient data using a weighted similarity approach; for details, read: [Sinha et al., 2021. DOI: 10.1016/j.crmeth.2021.100039](https://www.sciencedirect.com/science/article/pii/S2667237521000849){target="_blank"}.

More information for the `r tolower(tcga_title)` cell lines is available on [cBioPortal](https://www.cbioportal.org/){target="_blank"} using links on the table below.

```{r}
mtc_selected_columns <- c(
  "Cell Line"="Cell_Line_Name", 
  "% Rank by Mutation"="MUTSIM_Percentile_Ranks", 
  "% Rank by Copy Number"="CNASIM_Percentile_Ranks", 
  "% Rank by Expression"="EXPSIM_Percentile_Ranks",
  "% Rank by Avg % Ranks"="Rank_of_Average_Of_Percentile_Ranks")

colnames(cbioportal_mapping) <- c("Model_name", "TCGA_Type", "cBioPortal", "cBioPortal_Link")

tcga_type <- toupper(tcga_abbrev)
df <- mtc_dataset

# Filter
idx <- which(df$Tumor_Cancer_Type == tcga_type)
df <- df[idx, ]

# Round numeric columns 
is.num <- sapply(df, is.numeric)
df[is.num] <- lapply(df[is.num], round, 2)

# Filter dataset
df <- df[, mtc_selected_columns]
df <- df[order(-df$Rank_of_Average_Of_Percentile_Ranks), ]
colnames(df) <- names(mtc_selected_columns)

df_tmp <- merge(df, cbioportal_mapping, by.x='Cell Line', by.y="Model_name", all.x=TRUE)

selected_cols <- c("Cell Line", "% Rank by Avg % Ranks", "cBioPortal", "% Rank by Mutation", "% Rank by Copy Number", "% Rank by Expression")
df_site <- df_tmp[order(-df_tmp[, "% Rank by Avg % Ranks"]), selected_cols]

df_site$`% Rank by Avg % Ranks` <- color_bar("pink")(df_site$`% Rank by Avg % Ranks`)

colnames(df_site)[3] <- "More Line Info"

table_caption <- paste0("The table shows ", tolower(tcga_title), " cell lines sorted by similarity to characteristics of TCGA tumors based on expression, mutation, and copy number information. Cell Lines with higher values of '% Rank by Avg % Ranks' are considered better matches.")

knitr::kable(df_site, row.names = FALSE, format = "html", escape = FALSE, caption = table_caption) %>%
  kableExtra::kable_styling()
```

```{r}
# TODO: https://www.cbioportal.org/results/mutations?cancer_study_list=brca_tcga_pan_can_atlas_2018&Z_SCORE_THRESHOLD=2.0&RPPA_SCORE_THRESHOLD=2.0&profileFilter=mutations&case_set_id=brca_tcga_pan_can_atlas_2018_cnaseq&gene_list=TP53&geneset_list=%20&tab_index=tab_visualize&Action=Submit THIS -> brca_tcga_pan_can_atlas_2018 brca_tcga_pan_can_atlas_2018_cnaseq

# LOAD DATA ----
mutations_filename <- file.path(paste0("cbioportal_mutations/mutations_", tolower(tcga_abbrev), ".txt"))
tcga_mutation_dat <- read.table(mutations_filename, sep="\t", header=TRUE, stringsAsFactors=FALSE)
ccle_mutation_dat <- read.table("cbioportal_mutations/mutations_ccle_2019.txt", sep="\t", header=TRUE, stringsAsFactors=FALSE)

ccle_suffix <- ccle_tcga_mapping$ccle[ccle_tcga_mapping$tcga == tcga_abbrev]

# EXTRACT TCGA MUTATIONS ----
idx <- which(!(colnames(tcga_mutation_dat) %in% c("STUDY_ID", "SAMPLE_ID")))

# Make a list of missense mutations in TCGA data 
tcga_mutation_lst <- sapply(idx, function(y) {
  y <- sapply(tcga_mutation_dat[, y], function(x) {
    strsplit(x, " ")[[1]]
  })
  
  # Limit search to 1) missense mutations, 2) must be present in 2 TCGA samples, and 3) ignore WT, wild type entries 
  z <- unlist(y) %>% table
  z1 <- z[grepl("^[A-Z0-9]+$", names(z))] %>% .[. >= 2] %>% .[nchar(names(.)) > 2] %>% sort
  z1
})

names(tcga_mutation_lst) <- colnames(tcga_mutation_dat)[idx]

# Remove empty entries in list 
tcga_mutation_lst_filtered <- tcga_mutation_lst[lapply(tcga_mutation_lst, length) > 0]

# FILTER CCLE DATA BY TCGA MUTATIONS ----
tmp <- ccle_mutation_dat[grepl(ccle_suffix, ccle_mutation_dat$SAMPLE_ID),]
ccle_mutation_dat_filtered <- tmp[, colnames(tmp) %in% c("STUDY_ID", "SAMPLE_ID", names(tcga_mutation_lst_filtered))]

genes <- names(tcga_mutation_lst_filtered)
genes <- genes[genes %in% colnames(ccle_mutation_dat)]

for(i in 1:length(genes)) {
  #i <- 1
  #cat("I: ", i, "\n")
  cur_gene <- genes[i]
  
  patterns <- tcga_mutation_lst_filtered[[cur_gene]] %>% names %>% sort
  
  t1 <- sapply(patterns, function(x) {
    grepl(x, ccle_mutation_dat_filtered[, cur_gene])
  })

  colnames(t1) <- paste0(cur_gene, "_", colnames(t1), "_MATCH")

  t2 <- t1[, colSums(t1) > 1, drop=FALSE]
  
  if(ncol(t2) > 0) {
    ccle_mutation_dat_filtered <- cbind(ccle_mutation_dat_filtered, t2)    
  }
}
```

```{r, results='asis'}
# ITERATE OVER GENE-MUTATION PAIRS IN CCLE ----
idx <- grepl("_MATCH", colnames(ccle_mutation_dat_filtered)) %>% which

if(length(idx) > 0) {
  cat(paste0("## Cell Lines with ", tcga_title, " Mutations\n"))
  cat(paste0("Alterations present in cell lines also present in at least two TCGA Pan-Cancer Atlas (", tcga_abbrev, ") samples on [cBioPortal](https://www.cbioportal.org/){target='_blank'}.\n\n"))
  cat("### Alterations\n\n")

  ccle_mutation_dat_matches <- ccle_mutation_dat_filtered[, idx, drop=FALSE]
  
  for(i in 1:length(idx)) {
    #i <- 4
    colnames_matches <- colnames(ccle_mutation_dat_matches)
    cur_col <- colnames_matches[i]
    
    tmp <- strsplit(cur_col, "_")[[1]]
    gene <- tmp[1]
    alteration <- tmp[2]
    
    selected_cols <- c("SAMPLE_ID", gene, cur_col)
    t2 <- ccle_mutation_dat_filtered[, selected_cols, drop=FALSE]
    idx <- t2[, cur_col]
    matching_lines <- t2[idx,] 
    
    cat(paste0("#### ", gene, " ", alteration, "\n"))
      
    for(j in 1:nrow(matching_lines)) {
      #j <- 1
      cur_line <- matching_lines$SAMPLE_ID[j] %>% gsub(paste0("_", ccle_suffix), "", .)
      cat(paste0("* ", cur_line, "\n"))
    }
    
    cat("\n")
  }  
}
```

## Customized Comparisons 

Each project has unique questions. TumorComparer ([tumorcomparer.org](http://tumorcomparer.org){target="_blank"}) facilities customized comparisons of cell line datasets to tumor samples directly from the browser. 

## Technical Information

This analysis was generated using TumorComparer: `r pkg_version`. If you use content from this page, please cite [Sinha et al., 2021. DOI: 10.1016/j.crmeth.2021.100039](https://www.sciencedirect.com/science/article/pii/S2667237521000849){target="_blank"}.
